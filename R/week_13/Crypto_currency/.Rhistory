library(ggplot2)
library(data.table)
library(jsonlite)
coin <- 'ethereum'
getCoinPlot <- function(coin) {
df <- data.table(fromJSON(paste0('https://api.coingecko.com/api/v3/coins/',coin,'/ohlc?vs_currency=usd&days=1'), simplifyDataFrame = T))
names(df) <- c('time', 'open', 'high','low','close')
#convert UNIX timestamp to date
df$time <- as.POSIXct((df$time/1000), origin="1970-01-01")
result <- ggplot(df,aes(x=time, y=close))+
geom_line()+
theme_bw()
return(result)
}
p <- getCoinPlot('ethereum')
print(p)
shiny::runApp('~/greenFox/CEU-Traning/R/week_13')
shiny::runApp('~/greenFox/CEU-Traning/R/week_13')
library(shiny)
library(ggplot2)
library(data.table)
library(jsonlite)
runApp('~/greenFox/CEU-Traning/R/week_13')
runApp('~/greenFox/CEU-Traning/R/week_13')
runApp('~/greenFox/CEU-Traning/R/week_13')
runApp('app_2.R')
runApp('app_2.R')
runApp('app_2.R')
runApp('app_2.R')
runApp('app_2.R')
library(shiny); runApp('app_2.R')
runApp('app_2.R')
install.packages("rsconnet")
rsconnect::setAccountInfo(name='jafari-mahdi',
token='A89F273FBB9CF3655F8459A016ADB3B1',
secret='<SECRET>')
rsconnect::setAccountInfo(name='jafari-mahdi',
token='A89F273FBB9CF3655F8459A016ADB3B1',
secret='<SECRET>')
setwd("~/greenFox/CEU-Traning/R/week_13/Bitcoin_price")
rsconnect::deployApp('~/greenFox/CEU-Traning/R/week_13/Bitcoin_price')
library(shiny); runApp('app_2.R')
shiny::runApp('~/greenFox/CEU-Traning/R/week_13')
library(shiny)
library(ggplot2)
library(data.table)
library(jsonlite)
getCoinPlot <- function(coin) {
df <- data.table(fromJSON(paste0('https://api.coingecko.com/api/v3/coins/',coin,'/ohlc?vs_currency=usd&days=1'), simplifyDataFrame = T))
names(df) <- c('time', 'open', 'high','low','close')
#convert UNIX timestamp to date
df$time <- as.POSIXct((df$time/1000), origin="1970-01-01")
result <- ggplot(df,aes(x=time, y=close))+
geom_line()+
theme_bw()
return(result)
#return(df)
}
ui <- fluidPage(
selectInput("coin", "Select a coin",
c('bitcoin', 'ethereum', 'ripple')),
dataTableOutput('crypto_plot'),  # plotOutpot
plotOutput('crypto_plot')
)
server <- function(input, output, session) {
output$crypto_plot <-renderDataTable({ # renderPlot()
getCoinPlot(input$coin)
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(data.table)
library(jsonlite)
getCoinPlot <- function(coin) {
df <- data.table(fromJSON(paste0('https://api.coingecko.com/api/v3/coins/',coin,'/ohlc?vs_currency=usd&days=1'), simplifyDataFrame = T))
names(df) <- c('time', 'open', 'high','low','close')
#convert UNIX timestamp to date
df$time <- as.POSIXct((df$time/1000), origin="1970-01-01")
result <- ggplot(df,aes(x=time, y=close))+
geom_line()+
theme_bw()
return(result)
#return(df)
}
ui <- fluidPage(
selectInput("coin", "Select a coin",
c('bitcoin', 'ethereum', 'ripple')),
# dataTableOutput('crypto_plot'),  # plotOutpot
plotOutput('crypto_plot')
)
server <- function(input, output, session) {
output$crypto_plot <-renderDataTable({ # renderPlot()
getCoinPlot(input$coin)
})
}
shinyApp(ui, server)
