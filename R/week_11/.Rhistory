motor_data <- read_html(paste0('https://www.motorcycle.com',url))
#View(get_motors_details('https://www.motorcycle.com/specs/kawasaki/sport/2009/ninja/250r/detail.html'))
View(get_motors_details(one_link))
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
#motor_data <- read_html(url)
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
return(motor_details)
}
}
#View(get_motors_details('https://www.motorcycle.com/specs/kawasaki/sport/2009/ninja/250r/detail.html'))
View(get_motors_details(one_link))
# The midterm project is that you have to scrape all the Kawasaki motor data.
# https://www.motorcycle.com/specs/kawasaki.html
# Make some visualization with the Generic Type (Primary), year, and another interesting variable.
library(rvest)
# 1 get all the link. save it
vector_of_all_links <- c()
# get_all_links <- function(pageNum) {
for (pageNum in 1:3) {
url <- paste0("https://www.motorcycle.com/specs/kawasaki.html?page_num=", pageNum)
t <- read_html(url)
relative_link <- t %>% html_nodes('.flex-one a') %>% html_attr('href')
relative_link <- gsub('#UserReviews','',relative_link)
vector_of_all_links <- append( vector_of_all_links, relative_link)
}
one_link <- vector_of_all_links[1] # check the link will be correct
one_link
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
return(motor_details)
}
}
View(get_motors_details(one_link))
#save as RDS
saveRDS(read_all_links,'motors_detail.rds')
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
}
return(motor_details)
}
View(get_motors_details(one_link))
# 3 lapply your function to all your links, rbindlist. save the data.
# loop all the links in function
read_all_links <- lapply(vector_of_all_links[1:30], get_motors_details)
#save as RDS
saveRDS(read_all_links,'motors_detail.rds')
motors_detail <- readRDS("~/greenFox/CEU-Traning/R/week_10/Read_HTML_Tags/multipages/motors_detail.rds")
motors_detail <- readRDS("~/greenFox/CEU-Traning/R/week_10/Read_HTML_Tags/multipages/motors_detail.rds")
# The midterm project is that you have to scrape all the Kawasaki motor data.
# https://www.motorcycle.com/specs/kawasaki.html
# Make some visualization with the Generic Type (Primary), year, and another interesting variable.
library(rvest)
# 1 get all the link. save it
vector_of_all_links <- c()
for (pageNum in 1:3) {
url <- paste0("https://www.motorcycle.com/specs/kawasaki.html?page_num=", pageNum)
t <- read_html(url)
relative_link <- t %>% html_nodes('.flex-one a') %>% html_attr('href')
relative_link <- gsub('#UserReviews','',relative_link)
vector_of_all_links <- append( vector_of_all_links, relative_link)
}
one_link <- vector_of_all_links[1] # check the link will be correct
one_link
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
}
return(motor_details)
}
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
}
return(motor_details)
}
View(get_motors_details(one_link))
# 3 lapply your function to all your links, rbindlist. save the data.
# loop all the links in function
read_all_links <- lapply(vector_of_all_links[1:30], get_motors_details)
View(read_all_links)
#save as RDS
saveRDS(read_all_links,'motors_detail.rds')
# 3 lapply your function to all your links, rbindlist. save the data.
# loop all the links in function
read_all_links <- lapply(vector_of_all_links[1:30], get_motors_details)
# un List all the vector we receive from function
unlist_all_links <- unlist(read_all_links)
#save as RDS
saveRDS(unlist_all_links,'motors_detail.rds')
motors_detail <- readRDS("~/greenFox/CEU-Traning/R/week_10/Read_HTML_Tags/multipages/motors_detail.rds")
motors_detail <- readRDS("~/greenFox/CEU-Traning/R/week_10/Read_HTML_Tags/multipages/motors_detail.rds")
motors_detail <- readRDS("~/greenFox/CEU-Traning/R/week_10/Read_HTML_Tags/multipages/motors_detail.rds")
# 1 get all the link. save it
vector_of_all_links <- c()
for (pageNum in 1:3) {
url <- paste0("https://www.motorcycle.com/specs/kawasaki.html?page_num=", pageNum)
t <- read_html(url)
relative_link <- t %>% html_nodes('.flex-one a') %>% html_attr('href')
relative_link <- gsub('#UserReviews','',relative_link)
vector_of_all_links <- append( vector_of_all_links, relative_link)
}
for (pageNum in 1:3) {
url <- paste0("https://www.motorcycle.com/specs/kawasaki.html?page_num=", pageNum)
t <- read_html(url)
relative_link <- t %>% html_nodes('.flex-one a') %>% html_attr('href')
relative_link <- gsub('#UserReviews','',relative_link)
vector_of_all_links <- append( vector_of_all_links, relative_link)
}
one_link <- vector_of_all_links[1] # check the link will be correct
one_link
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text() %>% trimws()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text() %>% trimws()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
}
return(motor_details)
}
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text() %>% trimws()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text() %>% trimws()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
}
return(motor_details)
}
View(get_motors_details(one_link))
# 3 lapply your function to all your links, rbindlist. save the data.
# loop all the links in function
read_all_links <- lapply(vector_of_all_links[1:30], get_motors_details)
View(read_all_links)
# un List all the vector we receive from function
unlist_all_links <- unlist(read_all_links)
#save as RDS
saveRDS(unlist_all_links,'motors_detail.rds')
#save as RDS
saveRDS(unlist_all_links,'motors_detail.rds')
motors_detail <- readRDS("~/greenFox/CEU-Traning/R/week_10/motors_detail.rds")
all_mototrs_data <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_10/motors_detail.rds')
all_mototrs_data <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_10/motors_detail.rds')
# 3 lapply your function to all your links, rbindlist. save the data.
# loop all the links in function
read_all_links <- lapply(vector_of_all_links[1:30], get_motors_details)
# un List all the vector we receive from function
unlist_all_links <- unlist(read_all_links)
#save as RDS
saveRDS(unlist_all_links,'motors_detail.rds')
all_mototrs_data <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_10/motors_detail.rds')
all_mototrs_data
View(all_mototrs_data)
motors_df <- rbindlist(all_mototrs_data, fill = T)
motors_df
motors_df <- rbindlist(all_motors_data, fill = T)
library(data.table)
#save as RDS
saveRDS(unlist_all_links,'motors_detail.rds')
all_mototrs_data <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_10/motors_detail.rds')
motors_df <- rbindlist(all_motors_data, fill = T)
#save as RDS
saveRDS(unlist_all_links,'motors_detail.rds')
all_motors_data <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_10/motors_detail.rds')
motors_df <- rbindlist(all_motors_data, fill = T)
# 3 lapply your function to all your links, rbindlist. save the data.
# loop all the links in function
read_all_links <- lapply(vector_of_all_links[1:30], get_motors_details)
View(read_all_links)
motors_df <- rbindlist(read_all_links, fill = T)
View(read_all_links)
motors_df
View(motors_df)
# The midterm project is that you have to scrape all the Kawasaki motor data.
# https://www.motorcycle.com/specs/kawasaki.html
# Make some visualization with the Generic Type (Primary), year, and another interesting variable.
library(rvest)
library(data.table)
# 1 get all the link. save it
vector_of_all_links <- c()
# we target from page1-3 for reload and work faster
for (pageNum in 1:3) {
url <- paste0("https://www.motorcycle.com/specs/kawasaki.html?page_num=", pageNum)
t <- read_html(url)
relative_link <- t %>% html_nodes('.flex-one a') %>% html_attr('href')
relative_link <- gsub('#UserReviews','',relative_link)
vector_of_all_links <- append( vector_of_all_links, relative_link)
}
one_link <- vector_of_all_links[1] # check the link will be correct
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text() %>% trimws()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text() %>% trimws()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
}
return(motor_details)
}
View(get_motors_details(one_link))
# -----------------------
# 3- lapply your function to all your links, rbindlist. save the data.
# we target the first 30 data from List() to reload faster
read_all_links <- lapply(vector_of_all_links[1:30], get_motors_details)
View(read_all_links)
# convert to data.frame
motors_df <- rbindlist(read_all_links, fill = T)
View(motors_df)
setwd("~/greenFox/CEU-Traning/R/week_11")
saveRDS(motors_df,'motors_data.rds')
# -----------------------
# 3- lapply your function to all your links, rbindlist. save the data.
# we target the first 30 data from List() to reload faster
read_all_links <- lapply(vector_of_all_links, get_motors_details)
# convert to data.frame
motors_df <- rbindlist(read_all_links, fill = T)
saveRDS(motors_df,'motors_data.rds')
motors_data <- readRDS("~/greenFox/CEU-Traning/R/week_11/motors_data.rds")
View(motors_data)
View(motors_df)
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
ggplot(df, aes(x= name, y=msrp))+
geom_point()+
geom_smooth()
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
ggplot(df, aes(x= name, y=msrp))+
geom_point()+
geom_smooth()
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
ggplot(df, aes(x= name, y=MSRP))+
geom_point()+
geom_smooth()
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="blue", fill="black")+
theme_bw()
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df %>% arrange(-MSRP) %>% head(10)
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df %>% arrange(MSRP) %>% head(10)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="blue", fill="black")+
theme_bw()
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(10)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="blue", fill="black")+
theme_bw()
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(-MSRP) %>% head(10)
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(10)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="blue", fill="black")+
theme_bw()
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(10)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="blue", fill="black")+
theme_bw()+
coord_flip()+
labs(x="Price",y="Name", title = "Price of Kawasaki")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(10)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="blue", fill="black")+
theme_bw()+
coord_flip()+
labs(x="Name",y="Price", title = "Price of Kawasaki")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(10)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="blue", fill="greay")+
theme_bw()+
coord_flip()+
labs(x="Name",y="Price", title = "Price of Kawasaki")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(10)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="blue", fill="grey")+
theme_bw()+
coord_flip()+
labs(x="Name",y="Price", title = "Price of Kawasaki")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(10)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="black", fill="grey")+
theme_bw()+
coord_flip()+
labs(x="Name",y="Price", title = "Price of Kawasaki")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(30)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="black", fill="grey")+
theme_bw()+
coord_flip()+
labs(x="Name",y="Price", title = "Price of Kawasaki")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(30)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="grey", fill="black")+
theme_bw()+
coord_flip()+
labs(x="Name",y="Price", title = "Price of Kawasaki")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(30)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="grey", fill="black")+
theme_bw()+
coord_flip()+
theme(axis.text.x = element_text(angle =60, vjust=0.5,hjust=0.5))+
labs(x="Name",y="Price", title = "Price of Kawasaki")
library(rvest)
library(data.table)
# 1 get all the link. save it
vector_of_all_links <- c()
# we target from page1-3 for reload and work faster
for (pageNum in 1:3) {
url <- paste0("https://www.motorcycle.com/specs/kawasaki.html?page_num=", pageNum)
t <- read_html(url)
relative_link <- t %>% html_nodes('.flex-one a') %>% html_attr('href')
relative_link <- gsub('#UserReviews','',relative_link)
vector_of_all_links <- append( vector_of_all_links, relative_link)
}
# we target from page1-3 for reload and work faster
for (pageNum in 1:3) {
url <- paste0("https://www.motorcycle.com/specs/kawasaki.html?page_num=", pageNum)
t <- read_html(url)
relative_link <- t %>% html_nodes('.flex-one a') %>% html_attr('href')
relative_link <- gsub('#UserReviews','',relative_link)
vector_of_all_links <- append( vector_of_all_links, relative_link)
}
one_link <- vector_of_all_links[1] # check the link will be correct
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text() %>% trimws()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text() %>% trimws()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
}
return(motor_details)
}
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text() %>% trimws()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text() %>% trimws()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
}
return(motor_details)
}
get_motors_details <- function(url) {
motor_data <- read_html(paste0('https://www.motorcycle.com',url))
motor_details <- list()
motor_details[["name"]] <- motor_data %>% html_nodes('.sl-post-title') %>% html_text()
key <- motor_data %>% html_nodes('.spec-key.bold') %>% html_text() %>% trimws()
value <- motor_data %>% html_nodes('.vs-specs-table-row .spec-value') %>% html_text() %>% trimws()
if(length(key)==length(value)){
for (i in 1:length(key)) {
motor_details[[key[i]]] <- value[i]
}
}
return(motor_details)
}
# -----------------------
# 3- lapply your function to all your links, rbindlist. save the data.
# we target the first 30 data from List() to reload faster
read_all_links <- lapply(vector_of_all_links, get_motors_details)
# convert to data.frame
motors_df <- rbindlist(read_all_links, fill = T)
View(motors_df)
# make RDS file
saveRDS(motors_df,'motors_data.rds')
# make RDS file
saveRDS(motors_df,'motors_data.rds')
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(30)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="grey", fill="black")+
theme_bw()+
coord_flip()+
theme(axis.text.x = element_text(angle =60, vjust=0.5,hjust=0.5))+
labs(x="Name",y="Price", title = "Kawasaki Details")
df <- df %>% arrange(MSRP) %>% head(20)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="grey", fill="black")+
theme_bw()+
coord_flip()+
theme(axis.text.x = element_text(angle =60, vjust=0.5,hjust=0.5))+
labs(x="Name",y="Price", title = "Kawasaki Details")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(20)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="grey", fill="black")+
theme_bw()+
coord_flip()+
theme(axis.text.x = element_text(angle =60, vjust=0.5,hjust=0.5))+
labs(x="Name",y="Price", title = "Kawasaki Details")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(50)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="grey", fill="black")+
theme_bw()+
coord_flip()+
theme(axis.text.x = element_text(angle =60, vjust=0.5,hjust=0.5))+
labs(x="Name",y="Price", title = "Kawasaki Details")
library(ggplot2)
library(dplyr)
df <- readRDS('/Users/JM/greenFox/CEU-Traning/R/week_11/motors_data.rds' )
df <- df %>% arrange(MSRP) %>% head(40)
ggplot(df, aes(x= name, y=MSRP))+
geom_col(color="grey", fill="black")+
theme_bw()+
coord_flip()+
theme(axis.text.x = element_text(angle =60, vjust=0.5,hjust=0.5))+
labs(x="Name",y="Price", title = "Kawasaki Details")
