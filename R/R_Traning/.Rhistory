planes <- nycflights13::planes # show the data-set for the airports
weather <- nycflights13::weather # show the data-set for the weathers
View(airports)
View(flights)
View(planes)
View(weather)
flights %>%
filter(month == 1 & dep-daly >10)
library(dplyr)
library(dplyr)
flights %>%
filter(month == 1 & dep-daly >10)
flights %>%
filter(month == 1 & dep_delay >10)
flights %>%
filter(month == 1 & dep_delay >10) %>%
summarise(n())
flights %>%
filter(month == 1 & dep_delay >10) %>%
summarise(number-of-orvesation <- n())
flights %>%
filter(month == 1 & dep_delay >10) %>%
summarise(number_of_orvesation <- n())
flights %>%
filter( origin == "LGA") %>%
summarise(amount_of <- n(), mean())
source("~/greenFox/CEU-Traning/R/R_Traning/Session-6.R", echo=TRUE)
flights %>%
filter( origin == "LGA") %>%
summarise(amount_of <- n(), mean())
flights %>%
filter( origin == "LGA") %>%
summarise(amount_of = n(), mean(arr_delay))
flights %>%
filter( origin == "LGA") %>%
summarise(amount_of = n(), mean(arr_delay, na.rm = T))
flights %>%
filter( origin == "LGA") %>%
summarise(amount_of = n(), mean(arr_delay, na.rm = T), max())
flights %>%
filter( origin == "LGA") %>%
summarise(amount_of = n(), mean(arr_delay, na.rm = T), max(arr_delay))
flights %>%
filter( origin == "LGA") %>%
summarise(amount_of = n(), mean(arr_delay, na.rm = T), max(arr_delay, na.rm = T))
?flights
# task -3 A) which plane was the most exact in time where e orignin is EWR or JFK,
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%
summarise(avrege_delay= mean())
# task -3 A) which plane was the most exact in time where e orignin is EWR or JFK,
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(tailnum), max(tailnum))
# task -3 A) which plane was the most exact in time where e orignin is EWR or JFK,
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(tailnum ,na.rm = T), max(tailnum, na.rm = T))
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(tailnum ,na.rm = T))
flights %>%
filter(origin == "EWR" | origin == "JFK")
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum)
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(tailnum ,na.rm = T))
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T))
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arange(avrege_delay)
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay)
View(avrege_delay)
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay)
View(df)
df<-   # make new view for my table result to check
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay) %>%
mutate(abs_avrege= avrege_delay) %>%
arrange(-abs_avrege)
View(df)
df<-   # make new view for my table result to check
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay) %>%
mutate(abs_avrege= avrege_delay) %>%
arrange(abs_avrege)
df<-   # make new view for my table result to check
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay) %>%
mutate(abs_avrege= abs(avrege_delay)) %>%
arrange(abs_avrege)
head(abs_avrege)
df<-   # make new view for my table result to check
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay) %>%
mutate(abs_avrege= abs(avrege_delay)) %>%
arrange(abs_avrege) %>%
head(abs_avrege)
df<-   # make new view for my table result to check
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay) %>%
mutate(abs_avrege = abs(avrege_delay)) %>%
arrange(abs_avrege) %>%
head(abs_avrege) %>%
head(1)
arrange(abs_avrege) %>%
head(abs_avrege) %>%
head(1)
df<-   # make new view for my table result to check
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay) %>%
mutate(abs_avrege = abs(avrege_delay)) %>%
arrange(abs_avrege) %>%
head(abs_avrege) %>%
df<-   # make new view for my table result to check
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay) %>%
mutate(abs_avrege = abs(avrege_delay)) %>%
arrange(abs_avrege) %>%
head(abs_avrege) %>%
head(1)
df<-   # make new view for my table result to check
flights %>%
filter(origin == "EWR" | origin == "JFK") %>% # first to filter
group_by(tailnum) %>%  # second to group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # third to check
arrange(avrege_delay) %>%
mutate(abs_avrege = abs(avrege_delay)) %>%
arrange(abs_avrege) %>%
head(1)
diamonds <- diamonds.txt
data(diamonds)
View(diamonds)
install.packages("ggplot2")
data(diamonds)
data(diamonds)
View(diamonds)
library(nycflights13)
library( tidyverse )
library(ggplot2)
data(diamonds)
force(diamonds)
diamonds <- data(diamonds)
diamonds <- diamonds
View(diamonds)
diamonds <- View(diamonds)
# task-1: Read the 3 diamonds data sets and show the head of that.
diamonds
# task-1: Read the 3 diamonds data sets and show the head of that.
diamonds %>%
head(3)
# task-1: Read the 3 diamonds data sets and show the head of that.
diamonds %>%
head(3)
diamonds <- data(diamonds)
# task-1: Read the 3 diamonds data sets and show the head of that.
diamonds %>%
head(3)
# task-1: Read the 3 diamonds data sets and show the head of that.
diamonds
# task-1: Read the 3 diamonds data sets and show the head of that.
data(diamonds)
data(diamonds)
data("diamonds")
data(diamonds)
data(diamonds)
head()
data(diamonds) %>%
head(3)
data(diamonds) %>%
head(3)
head(diamonds)
head(diamonds)
read.table(diamonds.txt,
header = TRUE,
sep = ",",
dec = ".")
read.table(diamonds.txt,
header = TRUE,
sep = ",",
dec = ".")
head(diamonds)
read.table(diamonds.txt,
header = TRUE,
sep = ",",
dec = ".")
read.table(diamonds,
header = TRUE,
sep = ",",
dec = ".")
read.table(file = diamonds,
header = TRUE,
sep = ",",
dec = ".")
read.table(file = "diamonds.txt",
header = TRUE,
sep = ",",
dec = ".")
read.table(file = diamonds.txt,
header = TRUE,
sep = ",",
dec = ".")
read.table(file = diamonds,
header = TRUE,
sep = ",",
dec = ".")
# install.packages('nycflights13')
library(ggplot2)
library(nycflights13)
library( tidyverse )
diamonds <- data(diamonds)
# task-1: Read the 3 diamonds data sets and show the head of that.
head(diamonds)
read.table(file = diamonds,
header = TRUE,
sep = ",",
dec = ".")
read.table(file = "diamonds.txt",
header = TRUE,
sep = ",",
dec = ".")
# install.packages('nycflights13')
library(ggplot2)
library(nycflights13)
library( tidyverse )
diamonds <- data(diamonds)
# task-1: Read the 3 diamonds data sets and show the head of that.
head(diamonds)
read.table(file = "diamonds.txt",
header = TRUE,
sep = ",",
dec = ".")
read.table(file = "diamonds.txt",
header = TRUE,
sep = ",",
dec = ".")
path <- file.path(Users/JM/greenFox/CEU-Traning/R/R_Traning/diamonds.txt)
path <- file.path("Users","JM","greenFox","CEU-Traning","R","R_Traning","diamonds.txt")
read.table(file = path,
header = TRUE,
sep = ",",
dec = ".")
path <- file.path("Users","JM","greenFox","CEU-Traning","R","R_Traning","diamonds.txt")
read.table(file = path,
header = TRUE,
sep = ",",
dec = ".")
path <- file.path("~","Users","JM","greenFox","CEU-Traning","R","R_Traning","diamonds.txt")
read.table(file = path,
header = TRUE,
sep = ",",
dec = ".")
reading_from_url
reading_from_url <- read.csv(url("https://github.com/CEU-Economics-and-Business/ECBS-5208-Coding-1-Business-Analytics/tree/master/class_2/data/hotels/clean")
)
reading_from_url
View(reading_from_url)
View(reading_from_url)
View(reading_from_url)
View(reading_from_url)
View(reading_from_url)
head(reading_from_url)
head(reading_from_url)
web_url <-'https://github.com/CEU-Economics-and-Business/ECBS-5208-Coding-1-Business-Analytics/blob/master/class_2/data/hotels/clean/my_csvfile.csv'
reading_from_url <- read.csv(web_url)
head(reading_from_url)
View(airlines)
View(airports)
View(airlines)
View(flights)
View(planes)
View(weather)
View(planes)
df<-           # define variable as new table to have better view for result to check
flights %>%
filter(origin == "EWR" | origin == "JFK") %>%            # 1-step: filter
group_by(tailnum) %>%                                    # 2-step: group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # 3-step: find Average and defined to variable, and summarise it
arrange(avrege_delay) %>%                                # 4-step: sort the data
mutate(abs_avrege = abs(avrege_delay)) %>%               # 5-step: define new column to the table
arrange(abs_avrege) %>%                                  # 6-step: sort that column
head(1)                                                  # 7-step: grab the first one
flights %>%
filter(origin == "EWR" | origin == "JFK") %>%            # 1-step: filter
group_by(tailnum) %>%                                    # 2-step: group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T)) %>%  # 3-step: find Average and defined to variable, and summarise it
arrange(avrege_delay) %>%                                # 4-step: sort the data
mutate(abs_avrege = abs(avrege_delay)) %>%               # 5-step: define new column to the table
arrange(abs_avrege) %>%                                  # 6-step: sort that column
head(1)
flights %>%
filter(origin == "EWR" | origin == "JFK")%>%            # 1-step: filter
group_by(tailnum)%>%                                    # 2-step: group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T))%>%  # 3-step: find Average and defined to variable, and summarise it
arrange(avrege_delay)%>%                                # 4-step: sort the data
mutate(abs_avrege = abs(avrege_delay))%>%               # 5-step: define new column to the table
arrange(abs_avrege)%>%                                  # 6-step: sort that column
head(1)
install.packages("dplyr")
flights %>%
filter(origin == "EWR" | origin == "JFK")%>%            # 1-step: filter
group_by(tailnum)%>%                                    # 2-step: group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T))%>%  # 3-step: find Average and defined to variable, and summarise it
arrange(avrege_delay)%>%                                # 4-step: sort the data
mutate(abs_avrege = abs(avrege_delay))%>%               # 5-step: define new column to the table
arrange(abs_avrege)%>%                                  # 6-step: sort that column
head(1)
flights %>%
filter(origin == "EWR" | origin == "JFK")%>%            # 1-step: filter
group_by(tailnum)%>%                                    # 2-step: group each plan by them tailnum
summarise(avrege_delay= mean(arr_delay ,na.rm = T))%>%  # 3-step: find Average and defined to variable, and summarise it
arrange(avrege_delay)%>%                                # 4-step: sort the data
mutate(abs_avrege = abs(avrege_delay))%>%               # 5-step: define new column to the table
arrange(abs_avrege)%>%                                  # 6-step: sort that column
head(1)
diamonds_txt <- read.delim("diamonds.txt", header = TRUE, sep = "#")
reading_from_url <- read_csv(web_url)
install.packages("reader")
reading_from_url <- read_csv(web_url)
library(reader)
reading_from_url <- read_csv(web_url)
reading_from_url <- read_csv(web_url)
setwd("/Users/JM/greenFox/CEU-Traning/R/R_Traning")
reading_from_url <- read_csv(web_url)
library(reader)
reading_from_url <- read_csv(web_url)
install.packages("data.table")
library(data.table)
#reading_from_url <- read_csv(web_url)
reading_from_url <- data.table(web_url)
reading_from_url <- data.table(web_url)
head(reading_from_url)
View(head(reading_from_url))
reading_from_url <- data.table(web_url)
reading_from_url <- data.table(web_url)
View(head(reading_from_url))
#reading_from_url <- read.csv(web_url)
reading_from_url <- read_csv(web_url)
#reading_from_url <- data.table(web_url)
View(head(reading_from_url))
#reading_from_url <- read_csv(web_url)
#reading_from_url <- data.table(web_url)
View(head(reading_from_url))
reading_from_url <- read.csv(web_url)
#reading_from_url <- read_csv(web_url)
#reading_from_url <- data.table(web_url)
View(head(reading_from_url))
#  read the data-set .txt file with the extra line
diamonds_with_extra_lines <- read.delim("diamonds_with_extra_lines.txt",header = TRUE, sep = "\t")
head(diamonds_with_extra_lines)
View(ead(diamonds_with_extra_lines))
diamonds_with_extra_lines <- read.delim("diamonds_with_extra_lines.txt",header = TRUE, sep = "\t")
View(ead(diamonds_with_extra_lines))
View(head(diamonds_with_extra_lines))
View(head(diamonds_with_extra_lines))
View(head(diamonds_with_extra_lines))
diamonds_with_extra_lines <- read.csv("diamonds_with_extra_lines.txt", sep = ";", skip = 1)
View(head(diamonds_with_extra_lines))
reading_from_url <- read.csv(web_url)
#reading_from_url <- read_csv(web_url)
#reading_from_url <- data.table(web_url)
View(head(reading_from_url))
web_url <-'https://raw.githubusercontent.com/CEU-Economics-and-Business/ECBS-5208-Coding-1-Business-Analytics/master/class_2/data/hotels/clean/my_csvfile.csv'
reading_from_url <- read.csv(web_url)
#reading_from_url <- read_csv(web_url)
#reading_from_url <- data.table(web_url)
View(head(reading_from_url))
View(flights)
View(airports)
View(airlines)
View(diamonds_with_extra_lines)
View(flights)
flights %>%
View(filter(dep_delay > 1000))
flights <- nycflights13::flights
flights %>%
View(filter(dep_delay > 1000))
flights <- nycflights13::flights
flights %>%
View(filter(dep_delay > 1000))
install.packages("dplyr")
flights <- nycflights13::flights
flights %>%
View(filter(dep_delay > 1000))
library(dplyr)
flights <- nycflights13::flights
flights %>%
View(filter(dep_delay > 1000))
flights <- nycflights13::flights
flights %>%
View(filter(dep_delay > 1000))
flights %>%
filter(dep_delay > 1000)
flights <- nycflights13::flights
flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier =="AA" | carrier=="US")
head()
head(flights)
View(flights)
head(flights)
flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == c("EV","AA","US")) %>%
head(flights)
flights <- nycflights13::flights
flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == c("EV","AA","US")) %>%
head(flights)
flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == c("EV","AA","US"))
flights <- nycflights13::flights
carrir_to_check <-c("EV","AA","US")
flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == carrir_to_check )
flights <- nycflights13::flights
flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" )
flights <- nycflights13::flights
flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
arrange(-flight)
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
arrange(-chekc_flight)
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
arrange(-check_flight)
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
arrange(-check_flights)
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
arrange(check_flights)
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
View(arrange(check_flights))
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
#View(arrange(check_flights))
check_flights <- nycflights13::flights
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" )
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
View(check_flights)
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
head(check_flights)
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" )
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" )
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier == "EV" | carrier=="AA" | carrier =="US" ) %>%
arrange(check_flights)
rlang::last_error()
check_flights <- nycflights13::flights
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier %in% c("EV","AA","US") ) %>%
arrange(check_flights)
check_flights %>%
filter(dep_delay > 500 & dest == "MIA" & carrier %in% c("EV","AA","US") )
