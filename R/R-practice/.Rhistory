2 + 3
2 * 3
print("hello R")
print("Hello R")
getwd()
"pi"
"pi"
print(pi * 5)
print(letters)
letter
letters
first_Hundrad <- 1:100
first_Hundrad <- 1:100
print(first_10element)
print(first_10element)
print(first_element)
seq(1, 100, 2)
seq(1,5,0.1)
hist(runif(100))
numbers <- runif(1000)
plot(x,sin(x), type = 'l')
plot(x,sin(x))
# ---
x <-1:100
plot(x,sin(x), type = 'b') # 'l' is one the package for the graph in LINE
height<-c(72,64,57,80)
plot(height,weight,main="heights and weigths of students",xlab = "Height",ylab = "weight")
plot(height,weight,main="heights and weigths of students",xlab = "Height",ylab = "weight")
plot(height,weight,
main="heights and weigths of students",
xlab = "Height",
ylab = "weight")
plot(height,weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weight")
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weight")
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weight")
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
paste('yuor body mass index is:',bmi)
bmi<-w/(h^2)
bmi<-w/(h^2)
bmi<- w/(h^2)
bmi<- w/(h^2)
paste('yuor body mass index is:',bmi)
h<-h/100
h<- 180
w<-75
h<-h/100
he<-h/100
bmi<-w/(he^2)
paste('yuor body mass index is:',bmi)
he<-h/100
paste('your body mass index is:',bmi)
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
height<-c(72,64,57,80)
weightt<-c(180,165,172)
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
h <- c(174, 170, 160)
w <- c(90, 80, 70)
plot(h, w, main = 'Heights and weights of students',
xlab = 'Height', ylab = 'Weight')
height<-c(72,64,57)
weightt<-c(180,165,172)
plot(height, weightt, main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
height<-c(72,64,57,23)
weightt<-c(180,165,172,45)
plot(height, weightt, main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
print(first_element)
print(first_element)
print(first_element)
first_element<- 1:10
print(first_element)
print(first_element)
first_Hundrad <- 1:100
print(first_Hundrad)
str(letters) # convert to string
letters[3] # get by index
letters
str(letters) # convert to string
seq(1, 100, 2)
seq(1,5,0.1)
numbers <- runif(1000)
# check the uniform  # hist: for showing the graph and visitation
hist(runif(100))
# check the uniform  # hist: for showing the graph and visitation
numbers <- runif(1000)
print(numbers)
sin(x) # sin() is a function
x <-1:100
sin(x) # sin() is a function
# --- plot
plot(x,sin(x))
plot(x,sin(x), type = 'b')
height<-c(72,64,57,23)
weightt<-c(180,165,172,45)
plot(height, weightt, main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
h <- c(174, 170, 160)
w <- c(90, 80, 70)
plot(h, w, main = 'Heights and weights of students',
xlab = 'Height',
ylab = 'Weight')
height<-c(72,64,57,23)
weightt<-c(180,165,172,45)
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
height<-c(72,64,57,23)
weightt<-c(180,165,172,45)
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
plot(h, w, main = 'Heights and weights of students',
xlab = 'Height',
ylab = 'Weight')
# --- plot
plot(x,sin(x))
plot(x,sin(x), type = 'b')
sin(x) # sin() is a function
print(numbers)
print(numbers)
print(letters) # get out the letters alphabet
print(letters) # get out the letters alphabet
letters[3] # get by index
1:100
1:200
letters[4]
letters
print(first_Hundrad)
print(secound_Hundrad)
print(secound_Hundrad)
print(secound_Hundrad)
print(first_Hundrad)
first_element<- 1:10
print(secound_Hundrad)
print(secound_Hundrad)
seq(1, 100, 2)
seq(1, 100, 2)
seq(1,5,0.1)
seq(1,5,0.1)
print(numbers)
# hist: for showing the graph and visitation
hist(runif(100))
sin(x) # sin() is a function
sin(x)
sin(x)
plot(x,sin(x))
plot(x,sin(x), type = 'b')
plot(x,sin(x), type = 'l')
plot(x,sin(x), type = 'l')
plot(x,sin(x), type = 'l')
plot(x,sin(x), type = 'l')
plot(x,sin(x), type = 'b')
plot(x,sin(x), type = 'b')
plot(x,sin(x), type = 'b')
plot(x,sin(x), type = 'b')
plot(x,sin(x), type = 'l')
plot(x,sin(x), type = 'l')
weightt<-c(180,165,172,45)
height<-c(72,64,57,23, "hajMamad")
weightt<-c(180,165,172,45)
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
height<-c(72,64,57,23, "hajMamad")
weightt<-c(180,165,172,45, "hajMahdi")
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
height<-c(72,64,57,23)
weightt<-c(180,165,172,45)
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
height<-c(72,64,57,23)
weightt<-c(180,165,172,45)
plot(height, weightt,
main="heights and weigths of students",
xlab = "Height",
ylab = "weightt")
paste('your body mass index is:',bmi)
paste('your body mass index is:',bmi)
print(Mahdi)
print(Mahdi)
print(Mahdi)
print(Mahdi)
print(Mahdi)
Mahdi -> "hello mahdi"
Mahdi-> "hello mahdi"
print(mamad)
print(Mahdi)
# if, else if, else,  for & fun
a <- 10
if(a > 5){
print("a is bigger than 5")
}else{
print("a is less than 5")
}
typeof(a)
if(typeof(a) = "double"){
if(typeof(a) == "double"){
print("a it's double")
}else{
print("a it's Integer ")
}
b <- 45
if(b < 20){
print("it's small number")
}esleif(b < 40){
b <- 45
if(b < 20){
print("it's small number")
}else if(b < 40){
print("it's medium number")
}else if(b < 50){
print("big number")
}else(
print("it's a large number ")
)
mtcars
df <- mtcars
str(df)
nrow(df). # show the amount of the row in the df
nrow(df)
for (i in 1:10) {
print(i)
}
for (letter in letters) {
print(letter)
}
for(i in letters){
if(letters[i] / 2 != 0){
print(i)
}
}
for(i in letters){
if((letters[i] / 2) != 0){
print(i)
}
}
for(i in letters){
# if((letters[i] / 2) != 0){
#  print(i)
# }
print(letters[i])
}
# if((letters[i] / 2) != 0){
#  print(i)
# }
print(letters)
for(i in letters.length){
# if((letters[i] / 2) != 0){
#  print(i)
# }
print(i)
}
print(letters)
print(letters.length())
seq(1:100, 2)
seq(1,100, 2)
seq(a,z, 2)
seq(a,leeters.length , 2)
seq(a,lengthOfTheLetters, 2)
lengthOfTheLetters <- length(letters)
seq(a,lengthOfTheLetters, 2)
lengthOfTheLetters <- length(letters)
seq(a,lengthOfTheLetters, 1)
lengthOfTheLetters <- length(letters)
seq(1,lengthOfTheLetters, 2)
for(i in length(letters)){
if((i / 2) != 0){
print(i)
}
print(i)
}
for(i in length(letters)){
if((i / 2) != 0){
print(letters[i])
}
}
for(i in seq(1,length(letters),2){
for(i in seq(1,length(letters),2)){
print(i)
}
for(i in seq(1,length(letters),2)){
print(i)
print(letters[i])
}
checkNumber <-function(num){
if(num / 2 == 0){
print("even")
}else{
print("odd")
}
}
chckNumber(a)
checkNumber(a)
checkNumber(a)
checkNumber(a)
checkNumber(a)
a <- 11
# show the number if it's odd or even
checkNumber <-function(num){
if((num %% 2) == 0){
print("even")
}else{
print("odd")
}
}
checkNumber(a)
a <- 10
# show the number if it's odd or even
checkNumber <-function(num){
if((num %% 2) == 0){
print("even")
}else{
print("odd")
}
}
checkNumber(a)
answer
answer <- checkNumber(a)
answer
multNumbers(3, "hello")
multNumbers <-function(num1, num2){
if(is.numeric(num1) && is.numeric(num2)) {
return(num1+num2)
}else{
return("it's not a number")
}
}
multNumbers(3, "hello")
multNumbers <-function(num1, num2){
if(is.numeric(num1) && is.numeric(num2)) {
return(num1+num2)
}else{
return("it's not a number")
}
}
multNumbers(3, "hello")
multNumbers(3, 5)
1:100 %% 2
ifelse(1:100 %% 2 == 0)
1:100 %% 2 == 0
1:100 %% 2 == 0, "even", "odd"
(1:100 %% 2 == 0, yes="even", no="odd")
ifelse(1:100 %% 2 == 0, yes="even", no="odd")
for (i in 1:20) {
if(i %% 2 == 0){
return(paste(i,"even"))
} else{
return(paste(i,"odd"))
}
}
for (i in 1:20) {
if(i %% 2 == 0){
return(paste(i,"even"))
print(paste(i,"even"))
} else{
return(paste(i,"odd"))
}
}
for (i in 1:20) {
print(checkNumber(i))
}
for (i in 1:20) {
print(paste(i,"is a",checkNumber(i)))
}
height <- 180
weight <- 72
height <- height / 100
height
height <- 180
weight <- 72
height <- height / 100
height
bmiBody <- ((weight/height)*2)
bmiBody
height <- height / 100
height
bmiBody <- weight(height*2)
bmiBody
height <- 180
weight <- 72
height <- height / 100
bmiBody <- (weight(height^2))
bmiBody <- (weight/(height^2))
bmiBody
bmiBody <- (weight/(height^2))
if(bmiBody<18.5){
print("it falls within the underweight range.")
}else if(bmiBody < 25){
print("it falls within the healthy weight range.")
}else if(bmiBody < 30){
print("it falls within the overweight range.")
}else{
print("it falls within the obesity range")
}
if(bmiBody<18.5){
print(bmiBody, "falls within the underweight range.")
}else if(bmiBody < 25){
print(bmiBody,"it falls within the healthy weight range.")
}else if(bmiBody < 30){
print(bmiBody,"it falls within the overweight range.")
}else{
print(bmiBody,"it falls within the obesity range")
}
if(bmiBody<18.5){
paste(bmiBody, "falls within the underweight range.")
}else if(bmiBody < 25){
paste(bmiBody,"it falls within the healthy weight range.")
}else if(bmiBody < 30){
paste(bmiBody,"it falls within the overweight range.")
}else{
paste(bmiBody,"it falls within the obesity range")
}
checkBmi(130, 50)
checkBmi(130, 50)
checkBmi<-function(height,weight){
height <- height
weight <- weight
height <- height / 100
bmiBody <- (weight/(height^2))
if(bmiBody<18.5){
return(paste(bmiBody, "falls within the underweight range"))
}else if(bmiBody < 25){
return(paste(bmiBody,"falls within the healthy weight range"))
}else if(bmiBody < 30){
retur(paste(bmiBody," falls within the overweight range"))
}else{
return(paste(bmiBody," falls within the obesity range"))
}
}
checkBmi(130, 50)
checkBmi<-function(height,weight){
height <- height
weight <- weight
height <- height / 100
bmiBody <- (weight/(height^2))
if(bmiBody<18.5){
return(paste(bmiBody, "falls within the underweight range"))
}else if(bmiBody < 25){
return(paste(bmiBody,"falls within the healthy weight range"))
}else if(bmiBody < 30){
return(paste(bmiBody," falls within the overweight range"))
}else{
return(paste(bmiBody," falls within the obesity range"))
}
}
checkBmi(130, 50)
checkBmi(130, 50)
checkBmi(110, 30)
checkBmi(180, 60)
checkBmi(190, 75)
